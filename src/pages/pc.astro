---
import Layout from "../layouts/Layout.astro";
import PcGameCard from "../components/pcComponents/pcCard.astro";
import { getCollection } from "astro:content";

const pcGames = await getCollection("pcContent");

const itemsPerPage = 9;
const url = new URL(Astro.request.url);
const page = Number(url.searchParams.get("page")) || 1;
const totalPages = Math.ceil(pcGames.length / itemsPerPage);
const paginatedGames = pcGames.slice((page - 1) * itemsPerPage, page * itemsPerPage);
---

<Layout title="PC - Juegos Digitales">
  <section class="max-w-7xl mx-auto px-4 py-8">
    
    <!-- Barra superior de filtros -->
    <div class="bg-white shadow-md rounded-lg p-4 mb-6 flex flex-wrap items-center justify-between gap-4">
      <div class="flex flex-wrap gap-2">
        <select class="border border-gray-300 rounded px-3 py-1 text-sm">
          <option value="">Plataforma</option>
          <option>Steam</option>
          <option>Epic Games</option>
          <option>Ubisoft</option>
        </select>
        <select class="border border-gray-300 rounded px-3 py-1 text-sm">
          <option value="">Género</option>
          <option>Acción</option>
          <option>Estrategia</option>
          <option>Deportes</option>
        </select>
        <select class="border border-gray-300 rounded px-3 py-1 text-sm">
          <option value="">Tipo</option>
          <option>Clave</option>
          <option>Regalo</option>
          <option>Cuenta</option>
        </select>
      </div>
      <div class="flex items-center gap-2">
        <input type="number" placeholder="Min $" class="w-20 px-2 py-1 border border-gray-300 rounded text-sm" />
        <span>-</span>
        <input type="number" placeholder="Max $" class="w-20 px-2 py-1 border border-gray-300 rounded text-sm" />
        <button class="bg-green-600 hover:bg-green-700 text-white px-4 py-1 rounded text-sm">Aplicar</button>
      </div>
    </div>

    <!-- Galería de juegos con tarjetas grandes -->
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
      {
        paginatedGames.map((game) => (
          <a href={`/pc/${game.slug}`} class="block transform hover:-translate-y-1 hover:shadow-lg transition duration-300">
            <PcGameCard {...game.data} />
          </a>
        ))
      }
    </div>

    <!-- Paginación -->
    <div class="mt-10 flex justify-center space-x-2">
      {
        Array.from({ length: totalPages }, (_, i) => {
          const p = i + 1;
          const isActive = p === page;
          return (
            <a href={`?page=${p}`} class={`px-3 py-1 rounded border text-sm ${isActive ? "bg-green-500 text-white" : "bg-white hover:bg-gray-100"}`}>
              {p}
            </a>
          );
        })
      }
    </div>

    <!-- Resultados -->
    <p class="text-center text-sm text-gray-600 mt-4">
      Mostrando {paginatedGames.length} de {pcGames.length} juegos
    </p>
  </section>
</Layout>
