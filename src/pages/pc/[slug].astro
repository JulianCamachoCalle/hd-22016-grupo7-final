---
import Layout from "../../layouts/Layout.astro";
import { getCollection, getEntryBySlug } from "astro:content";

import "../../styles/global.css";

const { slug } = Astro.params;

// Juego actual
const pcGame = await getEntryBySlug("pcContent", slug);
if (!pcGame) {
  throw new Error(`Juego no encontrado para el slug: ${slug}`);
}

// Rutas dinámicas
export async function getStaticPaths() {
  const games = await getCollection("pcContent");
  return games.map((game) => ({
    params: { slug: game.slug },
  }));
}

const { titulo, descripcion, imagen, plataforma, genero, tipo, precio } = pcGame.data;

// Juegos aleatorios
const allGames = await getCollection("pcContent");
const otrosJuegos = allGames
  .filter(g => g.slug !== slug)
  .sort(() => Math.random() - 0.5)
  .slice(0, 3);
---

<Layout title={titulo}>
  <section class="min-h-screen px-4 py-14 bg-gradient-to-br from-gray-900 via-gray-800 to-black text-white">
    <div class="max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-12 items-center">
      
      <!-- Imagen -->
      <div class="flex justify-center">
        <img 
  src={imagen} 
  alt={titulo} 
  class="rounded-2xl shadow-[0_0_40px_rgba(0,255,200,0.5)] w-full max-w-2xl transform hover:scale-105 transition duration-500"
/>

      </div>

      <!-- Información del juego -->
      <div class="space-y-6">
        <h1 class="text-5xl font-extrabold text-green-400 drop-shadow-md">{titulo}</h1>

        <div class="flex flex-wrap gap-4 text-sm uppercase tracking-widest text-purple-400">
          <span class="bg-purple-800/30 px-3 py-1 rounded-full">🎮 {genero}</span>
          <span class="bg-purple-800/30 px-3 py-1 rounded-full">🖥️ {plataforma}</span>
          <span class="bg-purple-800/30 px-3 py-1 rounded-full">🛒 {tipo}</span>
        </div>

        <p class="text-gray-300 leading-relaxed text-justify border-l-4 border-green-400 pl-4">
          {descripcion || "Este juego no tiene descripción aún."}
        </p>

        <!-- Precio + Compra -->
        <div class="bg-gray-800 border border-green-500 rounded-xl p-6 shadow-xl space-y-4">
          <div class="flex items-center justify-between">
            <p class="text-gray-400 text-sm">Precio</p>
            <span class="text-3xl font-bold text-green-400">${precio}</span>
          </div>

          <button 
            class="w-full py-3 bg-green-500 hover:bg-green-400 text-black font-bold rounded-lg transition duration-300 shadow-[0_0_15px_#00ffcc] hover:shadow-[0_0_25px_#00ffcc]"
          >
            Comprar ahora 🚀
          </button>

          <p class="text-xs text-gray-500 text-center">Entrega inmediata • Stock disponible ✅</p>
        </div>

        <div>
          <a href="/pc" class="text-green-400 hover:underline text-sm">
            ← Volver a la tienda
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- Otros juegos -->
  <section class="px-4 py-16 bg-black border-t border-gray-700 text-white">
    <div class="max-w-7xl mx-auto space-y-8">
      <h2 class="text-3xl font-bold text-green-400">🎯 También te puede interesar</h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8">
        {otrosJuegos.map((juego) => (
          <a 
            href={`/pc/${juego.slug}`} 
            class="group bg-gray-800 rounded-xl p-4 shadow-lg hover:shadow-green-400/20 transition duration-300 hover:-translate-y-1"
          >
            <img 
              src={juego.data.imagen} 
              alt={juego.data.titulo} 
              class="w-full h-48 object-cover rounded-md mb-4 group-hover:scale-105 transition-transform duration-300"
            />
            <h3 class="text-lg font-semibold text-green-300 group-hover:underline">
              {juego.data.titulo}
            </h3>
            <p class="text-sm text-gray-400 truncate">{juego.data.descripcion}</p>
            <span class="block mt-2 text-green-400 font-bold">${juego.data.precio}</span>
          </a>
        ))}
      </div>
    </div>
  </section>
</Layout>
